services:
  # Next.js Application
  web:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=file:./dev.db
      - NEXTAUTH_SECRET=dev_secret_change_me
      - NEXTAUTH_URL=http://localhost:3000
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minio
      - S3_SECRET_KEY=miniosecret
      - S3_BUCKET=uknf-files
      - CLAMAV_HOST=clamav
      - CLAMAV_PORT=3310
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - REDIS_URL=redis://redis:6379
      - RATE_LIMIT_MAX_REQUESTS=60
      - RATE_LIMIT_WINDOW_MS=60000
      - MAX_FILE_SIZE=104857600
      - ALLOWED_FILE_TYPES=pdf,doc,docx,xls,xlsx,csv,txt,mp3,zip
    depends_on:
      - minio
      - clamav
      - redis
    volumes:
      - ./src:/app/src
      - ./prisma:/app/prisma
    command: >
      sh -c "
        npx prisma generate &&
        npx prisma migrate deploy &&
        npx prisma db seed &&
        npm run build &&
        npm start
      "

  # Microsoft SQL Server (ARM64 compatible) - Commented out due to ARM64 issues
  # mssql:
  #   image: mcr.microsoft.com/azure-sql-edge:latest
  #   environment:
  #     - ACCEPT_EULA=1
  #     - SA_PASSWORD=Your_Strong!Passw0rd
  #     - MSSQL_PID=Developer
  #   ports:
  #     - "1433:1433"
  #   volumes:
  #     - mssql_data:/var/opt/mssql
  #   healthcheck:
  #     test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Your_Strong!Passw0rd -Q 'SELECT 1' || exit 1"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5

  # MinIO (S3 compatible storage)
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=miniosecret
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # ClamAV Antivirus (ARM64 compatible)
  clamav:
    image: clamav/clamav:1.2.1
    ports:
      - "3310:3310"
    volumes:
      - clamav_data:/var/lib/clamav
    healthcheck:
      test: ["CMD", "clamdscan", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (for caching and rate limiting)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # RabbitMQ (optional - for async processing)
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  minio_data:
  clamav_data:
  redis_data:
  rabbitmq_data:

networks:
  default:
    name: uknf_network
